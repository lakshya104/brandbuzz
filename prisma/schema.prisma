// prisma/schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String           @id @default(cuid())
  name            String?
  email           String?          @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  points          Int              @default(0)
  accounts        Account[]
  redeemedRewards RedeemedReward[]
  pointsTable     Points?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Reward {
  id              String           @id @default(cuid())
  name            String
  image           String
  description     String
  redeemedRewards RedeemedReward[]
}

model RedeemedReward {
  id         String   @id @default(cuid())
  userId     String
  rewardId   String
  redeemedAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  reward Reward @relation(fields: [rewardId], references: [id])

  @@index([userId, rewardId], name: "unique_redeemed_reward")
}

model Points {
  userId String @id
  points Int    @default(0)

  user User @relation(fields: [userId], references: [id])
}
